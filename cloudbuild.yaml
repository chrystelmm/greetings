steps:
# pull the latest image
- id: pull
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    docker pull gcr.io/$PROJECT_ID/greetings:latest || exit 0

# build image
- id: build
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/greetings:$SHORT_SHA', '--cache-from', 'gcr.io/$PROJECT_ID/greetings:latest', '.' ]

# tag image with git short_sha
- id: tag
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'tag', 'gcr.io/$PROJECT_ID/greetings:$SHORT_SHA', 'gcr.io/$PROJECT_ID/greetings:latest' ]
  wait_for: ['build']

# test image
- id: test
  name: 'gcr.io/$PROJECT_ID/greetings:$SHORT_SHA'
  args: ['npx', '-v']
  env:
  - 'HOME=/app'
  wait_for: ['tag']

# push image to registry
- id: push
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', 'gcr.io/$PROJECT_ID/greetings:$SHORT_SHA' ]
  wait_for: ['test']

- id: push-latest
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', 'gcr.io/$PROJECT_ID/greetings:latest' ]

# render template for DEV environment
- id: template
  name: 'gcr.io/$PROJECT_ID/helmfile'
  args: ['helm', 'version']
  # args: [
  #   'helm', 
  #   'template', 
  #   'greetings', 
  #   '-f', 
  #   'greetings/dev.yaml', 
  #   '--set', 
  #   'projectId=$PROJECT_ID', 
  #   '--set', 
  #   'appVersion=$SHORT_SHA'
  # ]
  env:
  - CLOUDSDK_COMPUTE_REGION=us-west1
  - CLOUDSDK_CONTAINER_CLUSTER=development-us-west1
  wait_for: ['push']


# deploy to DEV environment
# - name: "gcr.io/cloud-builders/gke-deploy:stable"
#   args:
#   - run
#   - --filename=template.yaml
#   - --location=us-west1
#   - --cluster=development
#   wait_for: ['docker-push']
images:
- 'gcr.io/$PROJECT_ID/greetings:$SHORT_SHA'
- 'gcr.io/$PROJECT_ID/greetings:latest'